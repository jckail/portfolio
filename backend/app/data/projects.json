{
  "ai_billing": {
    "title": "AI Billing System",
    "description": "A proof-of-concept application for tracking and billing AI chat thread interactions with real-time cost metrics and analytics.",
    "link": "https://github.com/jckail/ai_chat_billing_app",
    "description_detail": "This application is designed to solve the challenge of monitoring and billing for AI model usage in chat-based applications. As organizations increasingly deploy AI assistants, understanding the costs associated with these interactions becomes critical for business planning and cost management.",
    "logoPath": "ai_billing.svg",
    "tech_stack": [
      "FastAPI",
      "React",
      "Pydantic",
      "SQLAlchemy",
      "SupaBase",
      "Docker"
    ],

    "last_commit": "February 2025"
  },
  "super_teacher": {
    "title": "Super Teacher",
    "description": "AI assistant to help teachers manage their classroom and create personalized lesson plans for students. Made with Python, FastAPI, and Pydantic.",
    "link": "https://github.com/jckail/superteacher",
    "link2": "https://www.the-super-teacher.com/",
    "description_detail": "Developed Super Teacher, an AI-powered web application that revolutionizes lesson planning for educators by providing personalized lesson plans tailored to individual student needs.",
    "logoPath": "super-teacher.svg",
    "tech_stack": [
      "FastAPI",
      "React",
      "Pydantic",
      "SQLAlchemy",
      "SupaBase",
      "Docker",
      "GCP"
    ],

    "last_commit": "November 2024"
  },
  "qr_for_groups": {
    "title": "Join Group via QR",
    "description": "Featured on TechCrunch - Won internal hackathon and created the ability for Facebook group admins to invite users to their groups by generating a QR Code. Used by millions daily.",
    "link": "https://techcrunch.com/2022/03/09/facebook-rolls-out-new-tools-for-group-admins-to-manage-their-communities-and-reduce-misinformation/",
    "description_detail": "",
    "logoPath": "techcrunch-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "January 2022"
  },
  "jobbr": {
    "title": " Jobbr",
    "description": "Agentic AI job matching a resume to available jobs at tech companies. Scrapes 100,000 jobs in under 15 minutes, using Python, Langchain, FastAPI and OpenAI.",
    "link": "https://github.com/jckail/Jobbr",
    "description_detail": "Developed Jobbr, an AI-powered web application that transforms recruitment by matching job postings with candidates' skills and resumes for greater efficiency and accuracy. Leveraged GPT-4 and Anthropic’s Claude to parse job postings from raw HTML into structured JSON, aligning job descriptions with resumes using advanced NLP techniques. Integrated SQLModel and SQLAlchemy for efficient data management, with Alembic migrations to ensure smooth database updates and version control. Deployed the platform using Docker to maintain consistent environments and follow DevOps best practices. Implemented a FastAPI-based modular API with private endpoints, Supabase authentication, and AI-powered role parsing and URL scraping to promote code reusability and scalability. Used LangChain for document embedding and similarity analysis, enhancing job matching precision with advanced AI capabilities. Followed CI/CD workflows with comprehensive testing to ensure code reliability and seamless deployments. Prioritized security through token management, Supabase authentication, and password hashing with Python-JOSE and Passlib, alongside email validation to ensure strong user management. Employed Pandas, BeautifulSoup4, lxml, and NumPy for data processing and parsing job postings efficiently. Demonstrated proficiency across AI/ML, web development, data engineering, and cloud integration, solving real-world recruitment challenges with an AI-first approach. Tech Stack: Python 3.9+, FastAPI, SQLAlchemy, Pydantic, Supabase, Docker",
    "logoPath": "jobbr-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "July 2024"
  },
  "portfolio": {
    "title": "Portfolio Website",
    "description": "A fully custom-built portfolio site showcasing my skills and work. Made with FastAPI and React, hosted on GCP via CloudRun.",
    "link": "https://github.com/jckail/portfolio",
    "description_detail": "This website is a custom-built portfolio site that I created to showcase my work. It is built using FastAPI and React, and is hosted on Google Cloud Platform via CloudRun. I chose to use Streamlit for this project because I wanted to learn a new technology, and I found it to be a great tool for building interactive web applications. The site features a clean and modern design, with sections for my projects, skills, and experience. It also includes a contact form that allows visitors to get in touch with me. Overall, I am very happy with how the site turned out, and I think it does a great job of highlighting my work and skills.",
    "logoPath": "jk-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "November 2024"
  },
  "pointup": {
    "title": "Pointup.io",
    "description": "An AI web app to manage 'All of your loyalty points in one place,' powered by a Selenium-WebDriver agent in AWS via elastic beanstalk, lambda, and s3. ",
    "link": "https://github.com/jckail/point_bot",
    "link2": "https://www.pointup.io/",
    "description_detail": "Created PointUp, a loyalty management tool designed to centralize and optimize points from credit cards, airlines, and hotel programs. Engineered a backend system using Python and Selenium for web scraping, overcoming anti-bot protections with NordVPN IP rotation and human behavior simulation. Deployed the system on AWS EC2 with secure data storage in S3, ensuring scalability and reliability. Integrated Auth0 for user authentication and encrypted sensitive data, ensuring secure handling of user credentials. Designed modular bot classes for easy integration of new loyalty programs, enhancing extensibility and user experience. Overcame complex anti-scraping challenges while maintaining ethical considerations around automation. Demonstrated expertise in Python development, cloud infrastructure, and secure web scraping through a real-world solution.",
    "logoPath": "pointup.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "October 2023"
  },
  "lit_crypto": {
    "title": "Algo Crypto",
    "description": "Trading algorithm via scraped crypto, NASDAQ, and CPME rare minerals data. Made with Flask, Pandas, AWS, and SageMaker.",
    "link": "https://github.com/jckail/crypto_trader",
    "description_detail": "Developed a Python-based data analysis tool to collect, process, and analyze real-time cryptocurrency data from APIs (CryptoCompare, CoinMarketCap, Alpha Vantage). Engineered a multithreaded data ingestion system to efficiently handle multiple data sources and ensure low-latency processing. Leveraged AWS services (S3, Glue, Athena) to create a scalable cloud-native architecture capable of handling large datasets. Applied stepwise regression and K-means clustering to detect market trends and correlations between traditional assets and cryptocurrencies. Demonstrated advanced data engineering skills by building modular components focused on data acquisition and ML-powered reporting. Highlighted problem-solving and financial technology expertise, navigating API integration challenges and delivering actionable insights into cryptocurrency trends.",
    "logoPath": "litcrypto-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "August 2020"
  },
  "go_pilot": {
    "title": "goPilot",
    "description": "Agentic AI developer assistant and cli tool to help debug, develop, and compile apps written in GO. Built using python and go leveraging OpenAI assistants api.",
    "link": "https://github.com/jckail/goPilot",
    "description_detail": "Built GoPilot, a next-generation CLI tool to enhance development workflows and accelerate mastery of Go programming. Integrated GPT-4 for code insights and debugging, transforming the CLI into an intelligent development companion. Designed a modular system combining Go, Python, and Bash to manage file operations, context updates, and automated testing workflows. Implemented goci-lint and Go’s native testing framework to streamline linting and testing operations. Added web scraping capabilities to fetch the latest Go documentation, ensuring developers stay updated on best practices. Developed a customizable CLI interface with task toggles and output path definitions to adapt to diverse workflows. Demonstrated proficiency in Go, Bash scripting, and AI-enhanced development, showcasing innovative problem-solving and productivity enhancement. ",
    "logoPath": "gopilot-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "November 2023"
  },
  "data_playground": {
    "title": "Data Playground ",
    "description": "An app designed to produce data to build data pipelines via an emulated ECommerce Store. Made with FastAPI, Streamlit, and Docker.",
    "link": "https://github.com/jckail/shop_project",
    "description_detail": "Developed a data-driven e-commerce platform mimicking real-world e-commerce workflows, focusing on analytics, API development, and data pipelines. Used PostgreSQL for data management and FastAPI for asynchronous API development to enable seamless backend operations. Implemented Docker-based containerization for smooth deployment and independent service scaling. Designed efficient data partitioning (hourly and daily) to optimize querying and ensure scalability under heavy workloads. Leveraged Prometheus for monitoring and built pipelines for future Grafana dashboard integration to improve observability. Demonstrated proficiency in asynchronous operations, microservices architecture, and backend development for data-intensive applications. Created an interactive platform with optional Streamlit visualizations for insight generation, targeting both developers and data engineers.",
    "logoPath": "playground-icon.svg",
    "tech_stack": [
      "Python",
      "FastAPI",
      "Pydantic",
      "SQLAlchemy",
      "PostgreSQL",
      "Docker",
      "AWS",
      "GPT-4",
      "Supabase",
      "Auth0",
      "Pandas"
    ],

    "last_commit": "October 2024"
  }
}
